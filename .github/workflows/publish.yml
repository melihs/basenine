on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Publish a Docker image

env:
  DOCKER_REGISTRY: docker.io
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        target:
          - amd64
          - arm64v8

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=-${{ matrix.target }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARCH=${{ matrix.target }}

  github-registry:
    name: Push Docker image to GitHub's Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        target:
          - amd64
          - arm64v8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.target }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARCH=${{ matrix.target }}

  docker-manifest:
    name: Create and Push a Docker Manifest
    runs-on: ubuntu-latest
    needs: [docker-registry]
    steps:
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Create manifest
        run: |
          while IFS= read -r line; do
            docker manifest create $line --amend $line-amd64 --amend $line-arm64v8
          done <<< "${{ steps.meta.outputs.tags }}"

      - name: Push manifest
        run: |
          while IFS= read -r line; do
            docker manifest push $line
          done <<< "${{ steps.meta.outputs.tags }}"
